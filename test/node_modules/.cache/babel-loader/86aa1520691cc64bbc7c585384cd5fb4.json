{"ast":null,"code":"// api\nimport { apiListQuestions } from '@/api/Examen.js';\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  computed: { ...mapState({\n      listaRespuestas: 'listaRespuestas'\n    })\n  },\n\n  data() {\n    return {\n      listQuestions: [],\n      indexSelected: -1,\n      questionSelected: null,\n      aswerdSelected: null\n    };\n  },\n\n  methods: {\n    loadQuestions: function () {\n      apiListQuestions().then(response => {\n        this.listQuestions = this.listQuestions.concat(response.data.results);\n\n        if (this.listQuestions.length > 0) {\n          this.indexSelected = 0;\n          this.questionSelected = this.listQuestions[this.indexSelected];\n        }\n      });\n    },\n    nextQuestion: function () {\n      this.indexSelected = this.indexSelected + 1;\n      this.questionSelected = this.listQuestions[this.indexSelected];\n    }\n  },\n\n  beforeMount() {\n    this.loadQuestions();\n  }\n\n};","map":{"version":3,"mappings":"AAwCE;AACA,SAASA,gBAAT,QAAiC,iBAAjC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;AAEA,eAAe;EACbC,QAAQ,EAAE,EACR,GAAGF,QAAQ,CAAC;MACRG,eAAe,EAAE;IADT,CAAD;EADH,CADG;;EAMbC,IAAI,GAAG;IACL,OAAO;MACLC,aAAa,EAAE,EADV;MAELC,aAAa,EAAE,CAAC,CAFX;MAGLC,gBAAgB,EAAE,IAHb;MAILC,cAAc,EAAE;IAJX,CAAP;EAMD,CAbY;;EAcbC,OAAO,EAAE;IACPC,aAAa,EAAE,YAAW;MACxBX,gBAAgB,GAAGY,IAAnB,CACGC,QAAD,IAAc;QACZ,KAAKP,aAAL,GAAqB,KAAKA,aAAL,CAAmBQ,MAAnB,CAA0BD,QAAQ,CAACR,IAAT,CAAcU,OAAxC,CAArB;;QACA,IAAI,KAAKT,aAAL,CAAmBU,MAAnB,GAA6B,CAAjC,EAAoC;UAClC,KAAKT,aAAL,GAAqB,CAArB;UACA,KAAKC,gBAAL,GAAwB,KAAKF,aAAL,CAAmB,KAAKC,aAAxB,CAAxB;QACF;MACF,CAPF;IASD,CAXM;IAYPU,YAAY,EAAE,YAAY;MACxB,KAAKV,aAAL,GAAqB,KAAKA,aAAL,GAAqB,CAA1C;MACA,KAAKC,gBAAL,GAAwB,KAAKF,aAAL,CAAmB,KAAKC,aAAxB,CAAxB;IACD;EAfM,CAdI;;EA+BbW,WAAU,GAAK;IACb,KAAKP,aAAL;EACD;;AAjCY,CAAf","names":["apiListQuestions","mapState","mapActions","computed","listaRespuestas","data","listQuestions","indexSelected","questionSelected","aswerdSelected","methods","loadQuestions","then","response","concat","results","length","nextQuestion","beforeMount"],"sourceRoot":"","sources":["/var/www/html/pruebas/vue/curso-gestor-estados/neuntest/src/components/examen/Questions.vue"],"sourcesContent":["<template>\n  <div v-if=\"questionSelected\">\n    <div class=\"card\">\n      <div class=\"card-content\">\n        <p class=\"title\">\n          {{ questionSelected.question }}\n        </p>\n        <p class=\"subtitle\">\n          Pregunta:  {{ indexSelected + 1 }} de {{ listQuestions.length }}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <!-- aqui van las alternativas -->\n      <div class=\"card-content\">\n        <aside class=\"menu\">\n          <p class=\"menu-label\">\n            Selecciona una respuesta:\n          </p>\n          <ul class=\"menu-list\">\n            <li v-for=\"answer in questionSelected.respuestas\" :key=\"answer.id\">\n              <label class=\"radio\">\n                <input type=\"radio\" name=\"answer\">\n                {{ answer.answer }}\n              </label>\n            </li>\n          </ul>\n        </aside>\n      </div>\n    </div>\n\n    <div class=\"box\">\n      <button class=\"button is-success\" @click=\"nextQuestion()\">Siguiente Pregunta</button>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  // api\n  import { apiListQuestions } from '@/api/Examen.js'\n  import { mapState, mapActions } from 'vuex'\n\n  export default {\n    computed: {\n      ...mapState({\n          listaRespuestas: 'listaRespuestas',\n      })\n    },\n    data() {\n      return {\n        listQuestions: [],\n        indexSelected: -1,\n        questionSelected: null,\n        aswerdSelected: null\n      }\n    },\n    methods: {\n      loadQuestions: function() {\n        apiListQuestions().then(\n          (response) => {\n            this.listQuestions = this.listQuestions.concat(response.data.results);\n            if (this.listQuestions.length  > 0) {\n              this.indexSelected = 0\n              this.questionSelected = this.listQuestions[this.indexSelected]\n            }\n          }\n        )\n      },\n      nextQuestion: function () {\n        this.indexSelected = this.indexSelected + 1\n        this.questionSelected = this.listQuestions[this.indexSelected]\n      },\n    },\n    beforeMount () {\n      this.loadQuestions();\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}