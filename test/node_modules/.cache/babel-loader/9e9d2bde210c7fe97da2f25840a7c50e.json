{"ast":null,"code":"// api\nimport { apiListQuestions } from '@/api/Examen.js';\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  computed: { ...mapState({\n      listaRespuestas: 'listaRespuestas'\n    })\n  },\n\n  data() {\n    return {\n      listQuestions: [],\n      indexSelected: -1,\n      questionSelected: null,\n      answerdSelected: null\n    };\n  },\n\n  methods: { ...mapActions({\n      agregarRespuesta: 'agregarRespuesta'\n    }),\n    loadQuestions: function () {\n      apiListQuestions().then(response => {\n        this.listQuestions = this.listQuestions.concat(response.data.results);\n\n        if (this.listQuestions.length > 0) {\n          this.indexSelected = 0;\n          this.questionSelected = this.listQuestions[this.indexSelected];\n        }\n      });\n    },\n    nextQuestion: function () {\n      this.indexSelected = this.indexSelected + 1;\n      this.questionSelected = this.listQuestions[this.indexSelected];\n    },\n    agregarRespuestaSeleccionada: function () {\n      let respuestaSeleccionada = {\n        'alernativa': this.answerdSelected.tag,\n        'puntos': ''\n      };\n    },\n    getValuaAlternative: function (answer) {\n      this.answerdSelected = answer;\n    }\n  },\n\n  beforeMount() {\n    this.loadQuestions();\n  }\n\n};","map":{"version":3,"mappings":"AAwCE;AACA,SAASA,gBAAT,QAAiC,iBAAjC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;AAEA,eAAe;EACbC,QAAQ,EAAE,EACR,GAAGF,QAAQ,CAAC;MACRG,eAAe,EAAE;IADT,CAAD;EADH,CADG;;EAMbC,IAAI,GAAG;IACL,OAAO;MACLC,aAAa,EAAE,EADV;MAELC,aAAa,EAAE,CAAC,CAFX;MAGLC,gBAAgB,EAAE,IAHb;MAILC,eAAe,EAAE;IAJZ,CAAP;EAMD,CAbY;;EAcbC,OAAO,EAAE,EACP,GAAGR,UAAU,CAAC;MACZS,gBAAgB,EAAC;IADL,CAAD,CADN;IAKPC,aAAa,EAAE,YAAW;MACxBZ,gBAAgB,GAAGa,IAAnB,CACGC,QAAD,IAAc;QACZ,KAAKR,aAAL,GAAqB,KAAKA,aAAL,CAAmBS,MAAnB,CAA0BD,QAAQ,CAACT,IAAT,CAAcW,OAAxC,CAArB;;QACA,IAAI,KAAKV,aAAL,CAAmBW,MAAnB,GAA6B,CAAjC,EAAoC;UAClC,KAAKV,aAAL,GAAqB,CAArB;UACA,KAAKC,gBAAL,GAAwB,KAAKF,aAAL,CAAmB,KAAKC,aAAxB,CAAxB;QACF;MACF,CAPF;IASD,CAfM;IAgBPW,YAAY,EAAE,YAAY;MACxB,KAAKX,aAAL,GAAqB,KAAKA,aAAL,GAAqB,CAA1C;MACA,KAAKC,gBAAL,GAAwB,KAAKF,aAAL,CAAmB,KAAKC,aAAxB,CAAxB;IACD,CAnBM;IAoBPY,4BAA4B,EAAE,YAAW;MACvC,IAAIC,qBAAoB,GAAI;QAC1B,cAAc,KAAKX,eAAL,CAAqBY,GADT;QAE1B,UAAU;MAFgB,CAA5B;IAKD,CA1BM;IA2BPC,mBAAmB,EAAE,UAAUC,MAAV,EAAiB;MACpC,KAAKd,eAAL,GAAuBc,MAAvB;IACD;EA7BM,CAdI;;EA8CbC,WAAU,GAAK;IACb,KAAKZ,aAAL;EACD;;AAhDY,CAAf","names":["apiListQuestions","mapState","mapActions","computed","listaRespuestas","data","listQuestions","indexSelected","questionSelected","answerdSelected","methods","agregarRespuesta","loadQuestions","then","response","concat","results","length","nextQuestion","agregarRespuestaSeleccionada","respuestaSeleccionada","tag","getValuaAlternative","answer","beforeMount"],"sourceRoot":"","sources":["/var/www/html/pruebas/vue/curso-gestor-estados/neuntest/src/components/examen/Questions.vue"],"sourcesContent":["<template>\n  <div v-if=\"questionSelected\">\n    <div class=\"card\">\n      <div class=\"card-content\">\n        <p class=\"title\">\n          {{ questionSelected.question }}\n        </p>\n        <p class=\"subtitle\">\n          Pregunta:  {{ indexSelected + 1 }} de {{ listQuestions.length }}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <!-- aqui van las alternativas -->\n      <div class=\"card-content\">\n        <aside class=\"menu\">\n          <p class=\"menu-label\">\n            Selecciona una respuesta:\n          </p>\n          <ul class=\"menu-list\">\n            <li v-for=\"answer in questionSelected.respuestas\" :key=\"answer.id\">\n              <label class=\"radio\">\n                <input type=\"radio\" name=\"answer\" @change=\"getValuaAlternative(answer)\">\n                {{ answer.tag }} {{ answer.answer }}\n              </label>\n            </li>\n          </ul>\n        </aside>\n      </div>\n    </div>\n\n    <div class=\"box\">\n      <button class=\"button is-success\" @click=\"nextQuestion()\">Siguiente Pregunta</button>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  // api\n  import { apiListQuestions } from '@/api/Examen.js'\n  import { mapState, mapActions } from 'vuex'\n\n  export default {\n    computed: {\n      ...mapState({\n          listaRespuestas: 'listaRespuestas',\n      })\n    },\n    data() {\n      return {\n        listQuestions: [],\n        indexSelected: -1,\n        questionSelected: null,\n        answerdSelected: null\n      }\n    },\n    methods: {\n      ...mapActions({\n        agregarRespuesta:'agregarRespuesta',\n        \n      }),\n      loadQuestions: function() {\n        apiListQuestions().then(\n          (response) => {\n            this.listQuestions = this.listQuestions.concat(response.data.results);\n            if (this.listQuestions.length  > 0) {\n              this.indexSelected = 0\n              this.questionSelected = this.listQuestions[this.indexSelected]\n            }\n          }\n        )\n      },\n      nextQuestion: function () {\n        this.indexSelected = this.indexSelected + 1\n        this.questionSelected = this.listQuestions[this.indexSelected]\n      },\n      agregarRespuestaSeleccionada: function (){\n        let respuestaSeleccionada = {\n          'alernativa': this.answerdSelected.tag,\n          'puntos': '',\n\n        }\n      },\n      getValuaAlternative: function (answer){\n        this.answerdSelected = answer;\n      },\n\n    },\n    beforeMount () {\n      this.loadQuestions();\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}