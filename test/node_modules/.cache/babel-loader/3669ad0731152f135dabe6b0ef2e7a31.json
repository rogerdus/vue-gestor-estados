{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = {\n  class: \"card-content\"\n};\nconst _hoisted_4 = {\n  class: \"title\"\n};\nconst _hoisted_5 = {\n  class: \"subtitle\"\n};\nconst _hoisted_6 = {\n  class: \"card\"\n};\nconst _hoisted_7 = {\n  class: \"card-content\"\n};\nconst _hoisted_8 = {\n  class: \"menu\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"menu-label\"\n}, \" Selecciona una respuesta: \", -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = {\n  class: \"menu-list\"\n};\nconst _hoisted_11 = {\n  class: \"radio\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"radio\",\n  name: \"answer\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = {\n  class: \"box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.questionSelected ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString($data.questionSelected.question), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", _hoisted_5, \" Pregunta: \" + _toDisplayString($data.indexSelected + 1) + \" de \" + _toDisplayString($data.listQuestions.length), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" aqui van las alternativas \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"aside\", _hoisted_8, [_hoisted_9, _createElementVNode(\"ul\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questionSelected.respuestas, answer => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: answer.id\n    }, [_createElementVNode(\"label\", _hoisted_11, [_hoisted_12, _createTextVNode(\" \" + _toDisplayString(answer.answer), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    class: \"button is-success\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.nextQuestion())\n  }, \"Siguiente Pregunta\")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;EAESA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;EAGNA,KAAK,EAAC;;;EAMRA,KAAK,EAAC;;;EAEJA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;gCACXC,oBAEI,GAFJ,EAEI;EAFDD,KAAK,EAAC;AAEL,CAFJ,EAAsB,6BAAtB,EAEA;AAAA;AAFA;;;EAGIA,KAAK,EAAC;;;EAECA,KAAK,EAAC;;;iCACXC,oBAAkC,OAAlC,EAAkC;EAA3BC,IAAI,EAAC,OAAsB;EAAdC,IAAI,EAAC;AAAS,CAAlC;;AAAA;;;EASPH,KAAK,EAAC;;;SA/BFI,wCAAXC,oBAmCM,KAnCN,EAmCMC,UAnCN,EAmCM,CAlCJL,oBASM,KATN,cASM,CARJA,oBAOM,KAPN,cAOM,CANJA,oBAEI,GAFJ,cAEIM,iBADCH,uBAAiBI,QAClB,CAFJ,EAC8B;EAAA;EAD9B,CAMI,EAHJP,oBAEI,GAFJ,cAAoB,gBACPM,iBAAGH,sBAAa,CAAhB,CADO,GACgB,MADhB,GACoBG,iBAAGH,oBAAcK,MAAjB,CADxC,EAC+D;EAAA;EAD/D,CAGI,CAPN,CAQI,CATN,CAkCI,EAvBJR,oBAiBM,KAjBN,cAiBM,CAhBJS,kDAgBI,EAfJT,oBAcM,KAdN,cAcM,CAbJA,oBAYQ,OAZR,cAYQ,CAXNU,UAWM,EARNV,oBAOK,IAPL,eAOK,oBANHI,oBAKKO,SALL,EAKK,IALL,EAKKC,YALgBT,uBAAiBU,UAKjC,EALMC,MAAqC,IAA/B;yBAAjBV,oBAKK,IALL,EAKK;MAL8CW,GAAG,EAAED,MAAM,CAACE;IAK1D,CALL,GACEhB,oBAGQ,OAHR,eAGQ,CAFNiB,WAEM,mBAF4B,MAClCX,iBAAGQ,MAAM,CAACA,MAAV,GAAgB;IAAA;KACV,CAHR,EADF;GAKK,CALL;;EAAA,CAMG,EAPL,CAQM,CAZR,CAaI,CAdN,CAeI,CAjBN,CAuBI,EAJJd,oBAEM,KAFN,eAEM,CADJA,oBAAqF,QAArF,EAAqF;IAA7ED,KAAK,EAAC,mBAAuE;IAAlDmB,OAAK,sCAAEC,uBAAF;EAA6C,CAArF,EAA0D,oBAA1D,CACI,CAFN,CAII,CAnCN","names":["class","_createElementVNode","type","name","$data","_createElementBlock","_hoisted_1","_toDisplayString","question","length","_createCommentVNode","_hoisted_9","_Fragment","_renderList","respuestas","answer","key","id","_hoisted_12","onClick","$options"],"sourceRoot":"","sources":["/var/www/html/pruebas/vue/curso-gestor-estados/neuntest/src/components/examen/Questions.vue"],"sourcesContent":["<template>\n  <div v-if=\"questionSelected\">\n    <div class=\"card\">\n      <div class=\"card-content\">\n        <p class=\"title\">\n          {{ questionSelected.question }}\n        </p>\n        <p class=\"subtitle\">\n          Pregunta:  {{ indexSelected + 1 }} de {{ listQuestions.length }}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <!-- aqui van las alternativas -->\n      <div class=\"card-content\">\n        <aside class=\"menu\">\n          <p class=\"menu-label\">\n            Selecciona una respuesta:\n          </p>\n          <ul class=\"menu-list\">\n            <li v-for=\"answer in questionSelected.respuestas\" :key=\"answer.id\">\n              <label class=\"radio\">\n                <input type=\"radio\" name=\"answer\">\n                {{ answer.answer }}\n              </label>\n            </li>\n          </ul>\n        </aside>\n      </div>\n    </div>\n\n    <div class=\"box\">\n      <button class=\"button is-success\" @click=\"nextQuestion()\">Siguiente Pregunta</button>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  // api\n  import { apiListQuestions } from '@/api/Examen.js'\n\n  export default {\n    data() {\n      return {\n        listQuestions: [],\n        indexSelected: -1,\n        questionSelected: null,\n        aswerdSelected: null\n      }\n    },\n    methods: {\n      loadQuestions: function() {\n        apiListQuestions().then(\n          (response) => {\n            this.listQuestions = this.listQuestions.concat(response.data.results);\n            if (this.listQuestions.length  > 0) {\n              this.indexSelected = 0\n              this.questionSelected = this.listQuestions[this.indexSelected]\n            }\n          }\n        )\n      },\n      nextQuestion: function () {\n        this.indexSelected = this.indexSelected + 1\n        this.questionSelected = this.listQuestions[this.indexSelected]\n      },\n    },\n    beforeMount () {\n      this.loadQuestions();\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}